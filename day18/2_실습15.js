/*
[ 실습15 - 인사 관리 대시보드 ] * 제출
1. 목표
    부서, 사원, 그리고 휴가 신청 정보를 하나의 웹 페이지에서 통합적으로 관리하는 대시보드를 제작합니다.
    사용자는 부서 등록/삭제/수정, 사원 등록/삭제/수정, 휴가 신청/취소 기능을 직관적으로 사용할 수 있어야 합니다.

2. 화면 구성
    페이지는 '부서 관리(왼쪽)', '사원 관리(가운데)', '휴가 관리(오른쪽)' 라는 3개의 명확한 컬럼으로 구성되어야 합니다.
    부서 관리 영역:
        부서 등록:  
            새로운 부서의 이름을 텍스트로 입력할 수 있는 입력창과 "추가" 버튼이 있어야 합니다.
        부서 목록:  
            등록된 모든 부서 정보를 보여주는 표(테이블)가 있어야 합니다.
            표는 "부서명"과 "관리" 열로 구성됩니다.
            각 부서 항목마다 해당 부서를 수정하고 삭제할 수 있는 버튼이 제공되어야 합니다.

    사원 관리 영역:
        사원 등록:
            사원의 이름과 직급을 입력하는 텍스트 필드가 있어야 합니다.
            등록된 부서 목록에서 소속될 부서를 선택할 수 있는 드롭다운 메뉴가 있어야 합니다.
            사원의 사진을 등록할 수 있는 파일 선택 버튼이 있어야 합니다.
        사원 목록:
            등록된 모든 사원 정보를 보여주는 표(테이블)가 있어야 합니다.
            표는 "사진", "이름", "부서", "직급", "관리" 순서의 열로 구성됩니다.
            각 사원 항목마다 해당 사원의 이름과 직급을 수정하고, 사원 정보를 삭제할 수 있는 버튼이 제공되어야 합니다.

    휴가 관리 영역:
        휴가 신청:
            등록된 사원 목록에서 휴가를 신청할 사원을 선택하는 드롭다운 메뉴가 있어야 합니다.
            휴가 시작일과 종료일을 선택할 수 있는 날짜 입력 필드가 있어야 합니다.
            휴가 사유를 텍스트로 간단히 기입할 수 있는 입력창이 있어야 합니다.
        휴가 신청 전체 목록:
            제출된 모든 휴가 신청 내역을 보여주는 목록이 있어야 합니다.
            각 항목에는 신청한 사원의 이름, 휴가 기간, 사유가 표시되어야 합니다.
            각 휴가 신청 항목마다 해당 신청을 취소할 수 있는 "신청취소" 버튼이 제공되어야 합니다.

3. 핵심 기능
    초기 데이터 표시:
        모든 데이터(부서, 사원, 휴가)는 웹 페이지가 실행되는 동안에만 유지되는 전역 배열을 통해 관리됩니다. 페이지를 새로고침하면 데이터는 초기 샘플 상태로 돌아갑니다.
        사용자가 처음 페이지에 접속했을 때, 시스템 사용법을 쉽게 파악할 수 있도록 부서, 사원, 휴가 신청에 대한 예시 데이터가 기본적으로 화면에 표시되어 있어야 합니다.

    부서 관리 기능:
        등록: "추가" 버튼 클릭 시, 입력된 부서가 부서 목록과 사원 등록의 부서 선택 메뉴에 즉시 반영되어야 합니다. 이미 존재하는 부서명은 등록되지 않아야 합니다.
        수정: "수정" 버튼 클릭 시, prompt 대화상자가 나타나 새로운 부서명을 입력받고, 입력 완료 시 목록에 즉시 반영되어야 합니다.
        삭제: "삭제" 버튼 클릭 시, 해당 부서가 목록에서 제거되어야 합니다. 단, 해당 부서에 소속된 사원이 한 명이라도 있을 경우, 삭제할 수 없다는 경고 메시지를 표시해야 합니다.

    사원 관리 기능:
        등록: 사원 정보를 입력하고 "등록" 버튼 클릭 시, 사원 목록과 휴가 신청의 사원 선택 메뉴에 즉시 추가되어야 합니다. 사진을 첨부하면 해당 사진이, 첨부하지 않으면 기본 이미지가 표시되어야 합니다.
        수정: "수정" 버튼 클릭 시, prompt 대화상자를 통해 새로운 이름과 직책을 입력받아 해당 사원의 정보를 수정하고 목록을 즉시 갱신해야 합니다.
        삭제: "삭제" 버튼 클릭 시, 해당 사원이 목록에서 제거되며, 관련된 모든 휴가 신청 기록도 함께 삭제되어야 합니다.

    휴가 관리 기능:
        신청: 휴가 정보를 입력하고 "신청" 버튼 클릭 시, 휴가 신청 목록에 즉시 추가되어야 합니다.
        취소: "신청취소" 버튼 클릭 시, 해당 휴가 신청 내역이 목록에서 제거되어야 합니다.
 
[ 작업순서 ] --- 100% 예측 불가능 ---
    1. [프] 화면스케치(프로토타입)
    2. [프] HTML과 CSS표현
    3. [백] 데이터모델링
    4. [백] 기능(함수)설계
    5. [백] 구현/로직
    6. [백] 테스트
    
    
        */
//===== [1] 데이터 모델링 샘플 ====== //
//1. 부서 목록 
const departmentList = [
    { dno : 1 , dname : '개발팀'} , 
    { dno : 2 , dname : '디자인팀'} , 
    { dno : 3 , dname : '기획팀'} ];
let curruntDno = 3 ; //*코드를 자동대입하기 위한 현재 코드번호 , 샘플의 마지막 코드의 번호로 초기화
//2. 사원목록 ,이미지 등록시 없을경우 : https://placehold.co/50x70 경로샘플
const staffList = [
    { sno : 1 , dno : 1 , sname : '박옥선' , sposition : '선임개발자' , simg :'https://placehold.co/50x70' },
    { sno : 2 , dno : 2 , sname : '이영지' , sposition : '수석디자이너' , simg :'https://placehold.co/50x70' },
    { sno : 3 , dno : 3 , sname : '안유진' , sposition : '팀장' , simg :'https://placehold.co/50x70' },
    { sno : 4 , dno : 1 , sname : '윤남노' , sposition : '대리' , simg :'https://placehold.co/50x70' },
];
let curruntSno = 4 ;
console.log(departmentList);
console.log(staffList);

//===== [2] 데이터 모델림 샘플 ===== //
//1. 부서목록 출력함수 : 부서목록의 객체정보를 추가하는 함수 : 실행조건 : 추가했을때 실행
departmentPrint();
function departmentPrint(){ console.log( '>> departmentPrint exe' )
    //1. 어디에 , <tbody>
    const deaprtmentbody = document.querySelector(`#departmentbody` ); 
    //2. 무엇을
    let html = '';
        for( let index = 0 ; index <= departmentList.length - 1 ; index++ ){
            const department = departmentList[index];
            // 현재 부서명의 저장된 카테고리번호로 카테고리객체 구하기
        html += `<tr>
                    <td> ${ department.dname } </td>
                    <td><button onclick="departmentEdit( ${ department.sno } )" class="btnEdit">수정</button>
                    <button onclick="departmentDelete( ${ department.sno } )" class="btnDelete">삭제</button></td> 
                </tr>`; //백틱주의,  샘플작성한 HTML의 <tr> 복붙
        }//for end
    //3. 출력
     deaprtmentbody.innerHTML = html;   console.log(html);
}//f end
// 2. 사원 등록함수 : 실행조건 : <등록번튼> onclick 클릭했을때
//HTML : <button onclick="departmentAdd()" class="btnAdd"> 등록 </button>
function depatr